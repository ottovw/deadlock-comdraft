/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as DraftsNewImport } from './routes/drafts/new'
import { Route as DraftsDraftIdIndexImport } from './routes/drafts/$draftId/index'
import { Route as DraftsDraftIdPlayersImport } from './routes/drafts/$draftId/players'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const DraftsNewRoute = DraftsNewImport.update({
  id: '/drafts/new',
  path: '/drafts/new',
  getParentRoute: () => rootRoute,
} as any)

const DraftsDraftIdIndexRoute = DraftsDraftIdIndexImport.update({
  id: '/drafts/$draftId/',
  path: '/drafts/$draftId/',
  getParentRoute: () => rootRoute,
} as any)

const DraftsDraftIdPlayersRoute = DraftsDraftIdPlayersImport.update({
  id: '/drafts/$draftId/players',
  path: '/drafts/$draftId/players',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/drafts/new': {
      id: '/drafts/new'
      path: '/drafts/new'
      fullPath: '/drafts/new'
      preLoaderRoute: typeof DraftsNewImport
      parentRoute: typeof rootRoute
    }
    '/drafts/$draftId/players': {
      id: '/drafts/$draftId/players'
      path: '/drafts/$draftId/players'
      fullPath: '/drafts/$draftId/players'
      preLoaderRoute: typeof DraftsDraftIdPlayersImport
      parentRoute: typeof rootRoute
    }
    '/drafts/$draftId/': {
      id: '/drafts/$draftId/'
      path: '/drafts/$draftId'
      fullPath: '/drafts/$draftId'
      preLoaderRoute: typeof DraftsDraftIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/login': typeof LoginRoute
  '/drafts/new': typeof DraftsNewRoute
  '/drafts/$draftId/players': typeof DraftsDraftIdPlayersRoute
  '/drafts/$draftId': typeof DraftsDraftIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/login': typeof LoginRoute
  '/drafts/new': typeof DraftsNewRoute
  '/drafts/$draftId/players': typeof DraftsDraftIdPlayersRoute
  '/drafts/$draftId': typeof DraftsDraftIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/login': typeof LoginRoute
  '/drafts/new': typeof DraftsNewRoute
  '/drafts/$draftId/players': typeof DraftsDraftIdPlayersRoute
  '/drafts/$draftId/': typeof DraftsDraftIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/drafts/new'
    | '/drafts/$draftId/players'
    | '/drafts/$draftId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/drafts/new'
    | '/drafts/$draftId/players'
    | '/drafts/$draftId'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/drafts/new'
    | '/drafts/$draftId/players'
    | '/drafts/$draftId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  LoginRoute: typeof LoginRoute
  DraftsNewRoute: typeof DraftsNewRoute
  DraftsDraftIdPlayersRoute: typeof DraftsDraftIdPlayersRoute
  DraftsDraftIdIndexRoute: typeof DraftsDraftIdIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  LoginRoute: LoginRoute,
  DraftsNewRoute: DraftsNewRoute,
  DraftsDraftIdPlayersRoute: DraftsDraftIdPlayersRoute,
  DraftsDraftIdIndexRoute: DraftsDraftIdIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/drafts/new",
        "/drafts/$draftId/players",
        "/drafts/$draftId/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/drafts/new": {
      "filePath": "drafts/new.tsx"
    },
    "/drafts/$draftId/players": {
      "filePath": "drafts/$draftId/players.tsx"
    },
    "/drafts/$draftId/": {
      "filePath": "drafts/$draftId/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
